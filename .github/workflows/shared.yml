
name: Build and deploy

on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
    
env:
  ENV: ${{inputs.env}}
  NODE_VERSION: '18.x'
  ARM_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
  ARM_CLIENT_SECRET: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
  ARM_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}
  ARM_TENANT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}
  
jobs:
  terraform:
   name: "Terraform"
   runs-on: ubuntu-latest
   defaults:
     run:
       shell: bash
       working-directory: ./terraform
 
   steps:
     - name: Checkout the repository to the runner
       uses: actions/checkout@v4

     - name: Create backend.conf file
       run: |
         chmod +x ../scripts/create-backend-conf.sh
         ../scripts/create-backend-conf.sh ${{ vars.APP_NAME }} ${{ env.ENV }} ${{ vars.STORAGE_ACCOUNT }}

     - name: Setup Terraform with specified version on the runner
       uses: hashicorp/setup-terraform@v3

     - uses: terraform-linters/setup-tflint@v3
       name: Setup TFLint
         
     - name: Run TFLint
       run: tflint -f compact

     - name: Checkov GitHub Action
       uses: bridgecrewio/checkov-action@v12
       with:
          output_format: cli

     - name: Terraform init
       id: init
       run: terraform init -backend-config=backend.conf
 
     - name: Terraform Apply
       run: terraform apply -var env=${{ env.ENV }} -var app_name=${{ vars.APP_NAME }} -auto-approve

  deploy:
    name: 'Build and deploy'
    runs-on: ubuntu-latest
    needs: terraform
    defaults:
      run:
        shell: bash
        working-directory: ./functions
    steps:
      - name: Azure Login
        uses: azure/login@v1.4.6
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Checkout GitHub Action
        uses: actions/checkout@v4

      - name: Setup Node Environment
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
        
      - name: Resolve Project Dependencies Using Npm
        shell: bash
        run: |
          npm install 
          npm run build --if-present

      - name: Install Azure Function Core Tools
        run: npm i -g azure-functions-core-tools@4 

      - name: Publish Azure Functions
        run: func azure functionapp publish func-${{ vars.APP_NAME }}

          

